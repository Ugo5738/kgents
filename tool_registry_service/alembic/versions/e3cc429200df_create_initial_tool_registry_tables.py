"""Create initial tool registry tables

Revision ID: e3cc429200df
Revises: 
Create Date: 2025-08-03 12:56:36.762645

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e3cc429200df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tool_categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_category_name')
    )
    op.create_index(op.f('ix_tool_categories_id'), 'tool_categories', ['id'], unique=False)
    op.create_index(op.f('ix_tool_categories_name'), 'tool_categories', ['name'], unique=False)
    op.create_table('tools',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('tool_type', sa.Enum('API', 'FUNCTION', 'LLM', 'CHAIN', 'EXTERNAL', 'OTHER', name='tooltype'), nullable=False),
    sa.Column('implementation', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('schema', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('requires_auth', sa.Boolean(), nullable=False),
    sa.Column('execution_env', sa.Enum('SANDBOX', 'CONTAINER', 'SERVERLESS', 'LOCAL', 'REMOTE', name='executionenvironment'), nullable=False),
    sa.Column('timeout_seconds', sa.Integer(), nullable=False),
    sa.Column('memory_mb', sa.Integer(), nullable=True),
    sa.Column('cpu_limit', sa.Float(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('category_id', sa.UUID(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('is_deprecated', sa.Boolean(), nullable=False),
    sa.Column('examples', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('documentation_url', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['tool_categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', 'owner_id', name='uq_tool_name_version_owner')
    )
    op.create_index(op.f('ix_tools_id'), 'tools', ['id'], unique=False)
    op.create_index(op.f('ix_tools_name'), 'tools', ['name'], unique=False)
    op.create_index(op.f('ix_tools_owner_id'), 'tools', ['owner_id'], unique=False)
    op.create_index(op.f('ix_tools_tool_type'), 'tools', ['tool_type'], unique=False)
    op.create_table('tool_executions',
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('inputs', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('outputs', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tool_executions_agent_id'), 'tool_executions', ['agent_id'], unique=False)
    op.create_index(op.f('ix_tool_executions_id'), 'tool_executions', ['id'], unique=False)
    op.create_index(op.f('ix_tool_executions_tool_id'), 'tool_executions', ['tool_id'], unique=False)
    op.create_index(op.f('ix_tool_executions_user_id'), 'tool_executions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tool_executions_user_id'), table_name='tool_executions')
    op.drop_index(op.f('ix_tool_executions_tool_id'), table_name='tool_executions')
    op.drop_index(op.f('ix_tool_executions_id'), table_name='tool_executions')
    op.drop_index(op.f('ix_tool_executions_agent_id'), table_name='tool_executions')
    op.drop_table('tool_executions')
    op.drop_index(op.f('ix_tools_tool_type'), table_name='tools')
    op.drop_index(op.f('ix_tools_owner_id'), table_name='tools')
    op.drop_index(op.f('ix_tools_name'), table_name='tools')
    op.drop_index(op.f('ix_tools_id'), table_name='tools')
    op.drop_table('tools')
    op.drop_index(op.f('ix_tool_categories_name'), table_name='tool_categories')
    op.drop_index(op.f('ix_tool_categories_id'), table_name='tool_categories')
    op.drop_table('tool_categories')
    # ### end Alembic commands ###
