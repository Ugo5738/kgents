"""Initial schema

Revision ID: 8409209c8b9b
Revises: 
Create Date: 2025-07-14 09:11:00.214205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8409209c8b9b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_clients',
    sa.Column('client_name', sa.String(), nullable=False),
    sa.Column('client_secret_hash', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('allowed_callback_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_app_clients_client_name'), 'app_clients', ['client_name'], unique=True, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_app_clients_id'), 'app_clients', ['id'], unique=False, schema='auth_service_data')
    op.create_table('permissions',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_permissions_id'), 'permissions', ['id'], unique=False, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_permissions_name'), 'permissions', ['name'], unique=True, schema='auth_service_data')
    op.create_table('profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['auth.users.id'], name='fk_profile_auth_user_id', ondelete='CASCADE', use_alter=True),
    sa.PrimaryKeyConstraint('user_id'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_profiles_email'), 'profiles', ['email'], unique=True, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_profiles_username'), 'profiles', ['username'], unique=True, schema='auth_service_data')
    op.create_table('roles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_roles_id'), 'roles', ['id'], unique=False, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_roles_name'), 'roles', ['name'], unique=True, schema='auth_service_data')
    op.create_table('app_client_refresh_tokens',
    sa.Column('app_client_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['app_client_id'], ['auth_service_data.app_clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_app_client_refresh_tokens_app_client_id'), 'app_client_refresh_tokens', ['app_client_id'], unique=False, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_app_client_refresh_tokens_id'), 'app_client_refresh_tokens', ['id'], unique=False, schema='auth_service_data')
    op.create_index(op.f('ix_auth_service_data_app_client_refresh_tokens_token_hash'), 'app_client_refresh_tokens', ['token_hash'], unique=True, schema='auth_service_data')
    op.create_table('app_client_roles',
    sa.Column('app_client_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['app_client_id'], ['auth_service_data.app_clients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['auth_service_data.roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('app_client_id', 'role_id', name='app_client_roles_pkey'),
    schema='auth_service_data'
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('permission_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_service_data.permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['auth_service_data.roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permissions_pkey'),
    schema='auth_service_data'
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['auth_service_data.roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['auth_service_data.profiles.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role_assignment'),
    schema='auth_service_data'
    )
    op.create_index(op.f('ix_auth_service_data_user_roles_id'), 'user_roles', ['id'], unique=False, schema='auth_service_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_auth_service_data_user_roles_id'), table_name='user_roles', schema='auth_service_data')
    op.drop_table('user_roles', schema='auth_service_data')
    op.drop_table('role_permissions', schema='auth_service_data')
    op.drop_table('app_client_roles', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_app_client_refresh_tokens_token_hash'), table_name='app_client_refresh_tokens', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_app_client_refresh_tokens_id'), table_name='app_client_refresh_tokens', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_app_client_refresh_tokens_app_client_id'), table_name='app_client_refresh_tokens', schema='auth_service_data')
    op.drop_table('app_client_refresh_tokens', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_roles_name'), table_name='roles', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_roles_id'), table_name='roles', schema='auth_service_data')
    op.drop_table('roles', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_profiles_username'), table_name='profiles', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_profiles_email'), table_name='profiles', schema='auth_service_data')
    op.drop_table('profiles', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_permissions_name'), table_name='permissions', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_permissions_id'), table_name='permissions', schema='auth_service_data')
    op.drop_table('permissions', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_app_clients_id'), table_name='app_clients', schema='auth_service_data')
    op.drop_index(op.f('ix_auth_service_data_app_clients_client_name'), table_name='app_clients', schema='auth_service_data')
    op.drop_table('app_clients', schema='auth_service_data')
    # ### end Alembic commands ###
