# Real Agent Dockerfile Template
# This deploys an actual Langflow agent, not just a test server

FROM python:3.12-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install Langflow and dependencies
RUN pip install --no-cache-dir \
    langflow==1.0.0a42 \
    gunicorn \
    uvicorn[standard]

# Copy agent configuration
COPY flow.json /app/flow.json

# Create startup script
RUN echo '#!/bin/bash' > /app/start.sh && \
    echo 'export LANGFLOW_HOST=0.0.0.0' >> /app/start.sh && \
    echo 'export LANGFLOW_PORT=${PORT:-8080}' >> /app/start.sh && \
    echo 'export LANGFLOW_WORKERS=1' >> /app/start.sh && \
    echo 'export LANGFLOW_LOG_LEVEL=info' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Start Langflow with the agent flow' >> /app/start.sh && \
    echo 'langflow run \' >> /app/start.sh && \
    echo '  --host $LANGFLOW_HOST \' >> /app/start.sh && \
    echo '  --port $LANGFLOW_PORT \' >> /app/start.sh && \
    echo '  --flow /app/flow.json \' >> /app/start.sh && \
    echo '  --no-open-browser' >> /app/start.sh && \
    chmod +x /app/start.sh

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8080}/health || exit 1

# Expose port (Cloud Run will override with PORT env var)
EXPOSE 8080

# Run the agent
CMD ["/app/start.sh"]
